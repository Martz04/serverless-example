service: final-python-thumbnail

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  profile: martz-personal
  stage: dev
  timeout: 10
  memorySize: 128
  deploymentBucket:
    name: ${self:service}-${opt:stage, self:provider.stage}-deployment-bucket
    serverSideEncryption: AES256
  environment:
    THUMBNAIL_SIZE: 128
    REGION_NAME: ${self:provider.region}
    DYNAMODB_TABLE: ${self:custom.dynamoTable}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Resource: "*"
          Action: "s3:*"
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
custom:
  bucket: mario-thumbnails
  dynamoTable: img-url-table
  pythonRequirements:
    dockerizePip: true
  localstack:
    stages:
      - local
    host: http://localhost

functions:
  s3_thumbnail_generator:
    handler: src/handler.s3_thumbnail_generator
    events:
      - s3: "${self:custom.bucket}"
        event: s3:ObjectCreated:*
        rules:
          - suffix: .png

plugins:
  - serverless-localstack
  - serverless-python-requirements
  - serverless-deployment-bucket


resources:
  Resources:
    ImagesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamoTable}